name: Build and publish wheels

on:
  push:
    tags:
      - "v*.*.*"  # Only run on version tags like v0.1.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']  # Supported Python versions
        arch: [x86_64, aarch64]  # Add aarch64 for ARM architecture

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2

      - name: Add aarch64 target
        if: matrix.arch == 'aarch64'
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Install cross-compilation tools
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Set linker
        if: matrix.arch == 'aarch64'
        run: echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Publish to PyPI on macOS and Linux
        if: runner.os != 'Windows'
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [[ "${{ matrix.arch }}" == "aarch64" ]]; then
            maturin publish --skip-existing --username __token__ --target aarch64-unknown-linux-gnu
          else
            maturin publish --skip-existing --username __token__
          fi

      - name: Publish to PyPI on Windows
        if: runner.os == 'Windows'
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          # Install Visual Studio Build Tools for Rust on Windows
          choco install visualstudio2019buildtools --version=16.11.7
          maturin publish --skip-existing --username __token__
