name: Build and publish wheels

on:
  push:
    tags:
      - "v*.*.*"  # Only run on version tags like v0.1.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']  # Supported Python versions
        arch: [x86_64, arm64]  # Add architecture matrix

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Build and publish wheels for Linux ARM
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu
          maturin publish --target aarch64-unknown-linux-gnu --skip-existing --username __token__

      - name: Publish to PyPI on macOS and Linux
        if: matrix.os != 'Windows' && matrix.arch == 'x86_64'
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          maturin publish --skip-existing --username __token__

      - name: Publish to PyPI on Windows
        if: runner.os == 'Windows' && matrix.arch == 'x86_64'
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          # Install Visual Studio Build Tools for Rust on Windows
          choco install visualstudio2019buildtools --version=16.11.7
          maturin publish --skip-existing --username __token__
